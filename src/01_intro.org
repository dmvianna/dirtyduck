#+STARTUP: showeverything
#+STARTUP: nohideblocks

* Description of the problem to solve

  This tutorial aims to introduce the reader to [[https://github.com/dssg/triage][triage]], a machine learning modeling tool built by the [[https://dsapp.uchicago.edu][Center for Data Science and Public Policy]].
  We will use the well known [[https://data.cityofchicago.org/Health-Human-Services/Food-Inspections/4ijn-s7e5][Chicago's Food Inspections dataset]] [fn:1]
  as the data source. We will present the two problems that =triage= was built to model:

  1. Creation of *Early  Intervention Systems* (*EIS*)[fn:3] and
  2. Resource prioritization (internally know as the /inspections
     problem/) [fn:4].
  
  For *inspection prioritization*, we want to generate a list of
  facilities[fn:2] to inspect in the following $X$ period of time
  that would have a *critical* or *serious*
  violation if inspected.

#+CAPTION: How to define Chicago Food Inspections as an inspection-prioritization problem:
#+begin_quote
  Which $n$ facilities will violate some rule in the
  following $X$ period of time?
#+end_quote

  This is a useful problem to solve if you can only do $n$ inspections
  in $X$ time. The results can help you prioritize your limited resources 
  (i.e. your inspection workforce) to find and remediate as many problems
  as possible.  

  You can also refine the definition and include only the most serious problems: 

#+CAPTION: How to define Chicago Food Inspections as an inspection-prioritization problem that targets the most serious cases:
#+begin_quote
  Which $n$ facilities will have a critical or serious violation in the
  following $X$ period of time?
#+end_quote

  Facility owners or managers might view this as an early intervention problem,
  where we predict if our facility will be inspected in the following $X$ period
  of time:

#+CAPTION: How to define Chicago Food Inspections as an early warning problem:
#+begin_quote
  Will my restaurant be inspected in the next $X$ period of time?
#+end_quote

  Knowing when the restaurant will be inspected enables the restaurant
  owner to prepare for it.

  In the previous definitions $X$ could be 1 month, 1 week, 1 year,
  etc. The election of $X$ depends on your internal process (e.g.  /We plan for inspections every 3 months, so you need a list every 3 months, before the meeting for planning/).
  
  Without going into detail, both problems have (or
  should have) the following data structure: The data describe
  *events* in which an *entity* was involved, and each event has a 
  specific *outcome* or result.

  The *entity* for both cases in this tutorial is a
  /facility/. The *event* is an inspection. The *outcome* differs: 
  for *EIS* the outcome is /inspected/, and for *inspections* the outcome
  might be /major violation found/ or /inspection failed/.


* Footnotes

[fn:4] Examples of this type of problems are: [[http://dsapp.uchicago.edu/projects/environment/][Predictive Enforcement
of Hazardous Waste Regulations]] , [[http://dsapp.uchicago.edu/projects/health/lead-prevention/][Targeting Proactive Inspections for Lead Hazards]]

[fn:3] In DSaPP we frequently work with partners in problems of this
kind for example: [[http://dsapp.uchicago.edu/projects/education/][Increasing High School Graduation Rates: Early
Warnings and Predictive Systems]], [[http://dsapp.uchicago.edu/projects/public-safety/police-eis/][Building Data-Driven Early
Intervention Systems for Police Officers]], [[http://dsapp.uchicago.edu/projects/criminal-justice/data-driven-justice-initiative/][Data-Driven Justice Initiative: Identifying Frequent Users of Multiple Public Systems for More Effective Early Assistance]] 

[fn:2] See the definitions below

[fn:1] This dataset has been used in several examples around the
web (e.g. [[https://chicago.github.io/food-inspections-evaluation/][here]],  [[https://youtu.be/lyDLAutA88s][here]], or [[https://youtu.be/1dKonIT-Yak][here]]) 
  














