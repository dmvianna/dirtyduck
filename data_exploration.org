#+TITLE: Dirty duck: A triage's guided tour
#+AUTHOR: Center of Data Science for Public Policy
#+EMAIL: adolfo@uchicago.edu
#+STARTUP: showeverything
#+STARTUP: nohideblocks
#+PROPERTY: header-args:sql :engine postgresql
#+PROPERTY: header-args:sql+ :dbhost 0.0.0.0
#+PROPERTY: header-args:sql+ :dbport 5434
#+PROPERTY: header-args:sql+ :dbuser food_user
#+PROPERTY: header-args:sql+ :dbpassword some_password
#+PROPERTY: header-args:sql+ :database food
#+PROPERTY: header-args:sql+ :results table drawer
#+PROPERTY: header-args:shell     :results drawer




* Data

** Downloading

   #+BEGIN_SRC shell
     curl "https://data.cityofchicago.org/api/views/4ijn-s7e5/rows.csv?accessType=DOWNLOAD" > data/inspections.csv
   #+END_SRC

   #+RESULTS:

   We can check the size of the data set

   #+BEGIN_SRC sh :dir /docker:root@tutorial_bastion:/ :results raw drawer
     ls -lh /data
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   total 188M
   -rw-rw-r-- 1 1000 1000 160K Sep 26 02:33 Average_Daily_Traffic_Counts.csv
   -rw-rw-r-- 1 1000 1000 4.7K Sep 26 02:32 Average_Daily_Traffic_Counts_-_Map.csv
   -rw-rw-r-- 1 1000 1000 378K Aug 20 01:52 Boundaries - ZIP Codes.zip
   -rw-rw-r-- 1 1000 1000 845K Aug 20 23:45 CTA_BusStops.zip
   -rw-rw-r-- 1 1000 1000  40K Aug 20 23:46 CTA_RailLines.zip
   -rw-rw-r-- 1 1000 1000  18K Aug 20 23:46 CTA_RailStations.zip
   -rw-rw-r-- 1 1000 1000 335K Aug 20 23:45 CTA_Routes.zip
   -rw-rw-r-- 1 1000 1000  51K Sep 26 02:30 Chicago Public Schools - School Locations SY1415.zip
   -rw-rw-r-- 1 1000 1000 2.6K Aug 20 23:46 PoliceStationsDec2012.zip
   -rw-rw-r-- 1 1000 1000 186M Dec 11 23:01 inspections.csv
   :END:

   And the (apparent) total number of rows

   #+BEGIN_SRC shell :dir data
     wc -l inspections.csv
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   395152 inspections.csv
   :END:



** Loading data to the database
   Assuming that you are already inside =bastion=, run the following

   #+BEGIN_SRC sh :dir /docker:root@tutorial_bastion:/ :results raw drawer
     psql ${FOOD_DB_URL} -c 'select count(*) from inspections'
   #+END_SRC

   #+RESULTS:
   :RESULTS:
    count
   --------
    162039
   (1 row)

   :END:

   (If you are connected to the database, you could just type =select count(*) from inspections=

   #+BEGIN_SRC sh :dir /docker:root@tutorial_bastion:/
     psql ${FOOD_DB_URL} -c "\copy inspections FROM '/data/inspections.csv' WITH HEADER CSV"
   #+END_SRC

   #+RESULTS:
   : COPY 162039


   This is different to the number of rows that we calculated
   previously. The reason is that the columns =violations= contains
   several lines in some examples. But don't worry, the previous
   command took care about that.

   Let's glimpse the data

   #+BEGIN_SRC sh :dir /docker:root@tutorial_bastion:/ :results org drawer
     psql ${FOOD_DB_URL} -c 'select * from inspections limit 5'
   #+END_SRC

   #+RESULTS:
   :RESULTS:
    inspection |           dba_name           |           aka_name           | license_num | facility_type |     risk      |        address         |  city   | state |  zip  |    date    |          type           |     results     |                                                                                                                                                                                                                                                                  violations                                                                                                                                                                                                                                                                  |      latitude      |     longitude      |                 location

    2116932    | RUBY'S SOULFOOD              | RUBY'S SOULFOOD              |     2542983 | Restaurant    | Risk 1 (High) | 5638 W CHICAGO AVE     | CHICAGO | IL    | 60651 | 2017-12-08 | Complaint               | No Entry        ||  41.89494199271389 | -87.76687933825816 | (41.89494199271389, -87.76687933825816)
    2116898    | WOODHAVEN BAR & KITCHEN      | WOODHAVEN BAR & KITCHEN      |     1140463 | Restaurant    | Risk 1 (High) | 712 N CLARK ST         | CHICAGO | IL    | 60654 | 2017-12-08 | Canvass Re-Inspection   | Pass            | 32. FOOD AND NON-FOOD CONTACT SURFACES PROPERLY DESIGNED, CONSTRUCTED AND MAINTAINED - Comments: Violation corrected.  | 34. FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED - Comments: Violation corrected.  | 41. PREMISES MAINTAINED FREE OF LITTER, UNNECESSARY ARTICLES, CLEANING  EQUIPMENT PROPERLY STORED - Comments: Violation corrected.  | 2. FACILITIES TO MAINTAIN PROPER TEMPERATURE - Comments: Violation corrected. Reach in cooler ambient air temperature @ 39.9F.  | 41.895303937252244 | -87.63136070486723 | (41.895303937252244, -87.63136070486723)
    2116886    | ORANGE GARDEN RESTAURANT LLC | ORANGE GARDEN RESTAURANT LLC |     1942679 | Restaurant    | Risk 1 (High) | 1942 W IRVING PARK RD  | CHICAGO | IL    | 60613 | 2017-12-08 | Complaint Re-Inspection | Pass            | 18. NO EVIDENCE OF RODENT OR INSECT OUTER OPENINGS PROTECTED/RODENT PROOFED, A WRITTEN LOG SHALL BE MAINTAINED AVAILABLE TO THE INSPECTORS - Comments: PEST CONTROL AT PREMISES 12-7-17. FOUND NO RAT DROPPINGS AT PREMISES. | 34. FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED - Comments: FOUND HOLE SEALED WITH CEMENT BY REAR EXIT DOOR.                                                                                                                                        | 41.954276019666246 |  -87.6780332991192 | (41.954276019666246, -87.6780332991192)
    2116831    | HALSTED STREET DELI & BAGEL  | HALSTED STREET DELI & BAGEL  |     2569647 | Restaurant    | Risk 1 (High) | 203 N LA SALLE ST      | CHICAGO | IL    | 60601 | 2017-12-07 | License                 | Pass            || 41.885822047853026 | -87.63230373508567 | (41.885822047853026, -87.63230373508567)
    2116816    | CUBBIE DOGGS                 | CUBBIE DOGGS                 |     1479345 |               | Risk 3 (Low)  | 3523 N CLARK ST        | CHICAGO | IL    | 60657 | 2017-12-07 | Canvass                 | Out of Business || 41.946344654873236 |  -87.6556546794345 | (41.946344654873236, -87.6556546794345)
   (5 rows)

   :END:


   Checking the documentation (located  [[https://data.cityofchicago.org/api/assets/BAD5301B-681A-4202-9D25-51B2CAE672FF?download=true][here]]),

   The meaning of some columns is the following:

   - Risk category of facility:: Each establishment is categorized as
     to its risk of adversely affecting the publicâ€™s health, with 1
     being the highest and 3 the lowest. The frequency of
     inspection is tied to this risk, with risk 1 establishments
     inspected most frequently and risk 3 least frequently.

   - Inspection type:: An inspection can be one of the following
     types: canvass, the most common type of inspection performed
     at a frequency relative to the risk of the   establishment;
     consultation, when the inspection is  done at the request of the
     owner prior to the opening of the establishment; complaint, when
     the inspection is done in    response to a complaint against the
     establishment; license, when the inspection is done    as a
     requirement for the establishment to receive its license to
     operate; suspect food    poisoning, when the inspection is done
     in response to one or more persons claiming to    have gotten ill
     as a result of eating at the establishment (a specific type of
     complaint-   based inspection); task-force inspection, when an
     inspection of a bar or tavern is done.    Re-inspections can
     occur for most types of these inspections and are indicated as
     such.

   -  Results:: An inspection can pass, pass with conditions or
     fail. Establishments receiving a â€˜passâ€™ were found to have no
     critical or serious violations (violation number 1-14 and 15-29,
     respectively). Establishments receiving a â€˜pass  with conditionsâ€™
     were found to have critical or serious violations, but these were
     corrected during the inspection. Establishments receiving a
     â€˜failâ€™ were found to have critical or serious violations that
     were not correctable during the inspection. An establishment
     receiving a â€˜failâ€™ does not  necessarily mean the establishmentâ€™s
     licensed is suspended. Establishments found to be out of business
     or not located are indicated as such.

   - Violations: An establishment can receive one or more of 45
     distinct violations (violation numbers 1-44 and 70). For each
     violation number listed for a given establishment, the
     requirement the establishment must meet in order for it to NOT
     receive a violation is noted, followed by a specific description
     of the findings that caused the violation to be issued.


   From this definitions, we can deduct the following claims:

1. /risk/ is related to the frequency of inspections of type /canvass/.
2. /consultation/ is a compulsory inspections /before/ the facility opens
   (so we can remove it from the data), the same happens with /license/.
3. /complaint/ and /suspect food poisoning/ inspections are triggered by
   the people, /consultation/ is triggered by the owner of the
   facility.
4. /task-force/ occurs against bar or taverns.
5. *Critical violations* are coded between =1-14=, *serious violations*
   between =15-29=. So, we can assume that the violations code =30= and
   onward are /minor/ violations.
6. They are only three possible results of the inspection (plus the
   fact that the facility was not located or out of business).


Let's check that we have *only* three different classifications for the
=risk= of the facility and 5 types of =types= of inspections:


#+BEGIN_SRC sql
  select distinct risk from inspections;
#+END_SRC

#+RESULTS:
:RESULTS:
| risk            |
|-----------------|
| [NULL]          |
| All             |
| Risk 1 (High)   |
| Risk 2 (Medium) |
| Risk 3 (Low)    |
:END:

#+BEGIN_SRC sql
  select distinct type from inspections
#+END_SRC

#+RESULTS:
:RESULTS:
| type                                      |
|-------------------------------------------|
| [NULL]                                    |
| CHANGED COURT DATE                        |
| License Re-Inspection                     |
| CORRECTIVE ACTION                         |
| REINSPECTION OF 48 HOUR NOTICE            |
| Task force liquor inspection 1474         |
| RE-INSPECTION OF CLOSE-UP                 |
| LICENSE                                   |
| sfp/complaint                             |
| TASK FORCE LIQUOR 1474                    |
| Business Not Located                      |
| task force                                |
| Canvass Re-Inspection                     |
| CANVASS RE INSPECTION OF CLOSE UP         |
| Duplicated                                |
| CANVASS SPECIAL EVENTS                    |
| fire complaint                            |
| ADDENDUM                                  |
| Task Force Liquor Catering                |
| POSSIBLE FBI                              |
| License consultation                      |
| error save                                |
| TASKFORCE                                 |
| license task 1474                         |
| out ofbusiness                            |
| RECALL INSPECTION                         |
| Kids Cafe'                                |
| finish complaint inspection from 5-18-10  |
| SPECIAL TASK FORCE                        |
| LICENSE CONSULTATION                      |
| CANVAS                                    |
| TASK FORCE LIQUOR 1470                    |
| License                                   |
| Sample Collection                         |
| REINSPECTION                              |
| TASK FORCE LIQUOR (1481)                  |
| Special Task Force                        |
| TASK FORCE PACKAGE GOODS 1474             |
| SFP RECENTLY INSPECTED                    |
| Pre-License Consultation                  |
| No Entry                                  |
| SFP/Complaint                             |
| LICENSE REQUEST                           |
| CITF                                      |
| License-Task Force                        |
| FIRE/COMPLAIN                             |
| citation re-issued                        |
| Complaint Re-Inspection                   |
| FIRE                                      |
| LIQOUR TASK FORCE NOT READY               |
| Consultation                              |
| Tag Removal                               |
| expansion                                 |
| Complaint-Fire Re-inspection              |
| LIQUOR CATERING                           |
| Recent Inspection                         |
| Non-Inspection                            |
| Complaint-Fire                            |
| NO ENTRY-SHORT COMPLAINT)                 |
| Canvass                                   |
| SFP                                       |
| Special Events (Festivals)                |
| TWO PEOPLE ATE AND GOT SICK.              |
| SFP/COMPLAINT                             |
| CANVASS FOR RIB FEST                      |
| LICENSE TASK FORCE / NOT -FOR-PROFIT CLUB |
| KITCHEN CLOSED FOR RENOVATION             |
| SMOKING COMPLAINT                         |
| Short Form Complaint                      |
| Short Form Fire-Complaint                 |
| O.B.                                      |
| LICENSE CANCELED BY OWNER                 |
| Package Liquor 1474                       |
| LICENSE WRONG ADDRESS                     |
| LICENSE RENEWAL FOR DAYCARE               |
| Suspected Food Poisoning Re-inspection    |
| Recent inspection                         |
| OWNER SUSPENDED OPERATION/LICENSE         |
| TASK FORCE PACKAGE LIQUOR                 |
| CANVASS/SPECIAL EVENT                     |
| Out of Business                           |
| TASK FORCE NOT READY                      |
| No entry                                  |
| Illegal Operation                         |
| DAY CARE LICENSE RENEWAL                  |
| LICENSE/NOT READY                         |
| CANVASS                                   |
| license                                   |
| TASTE OF CHICAGO                          |
| TASK FORCE NIGHT                          |
| KIDS CAFE                                 |
| Complaint                                 |
| LICENSE RENEWAL INSPECTION FOR DAYCARE    |
| CLOSE-UP/COMPLAINT REINSPECTION           |
| 1315 license reinspection                 |
| no entry                                  |
| Task Force for liquor 1474                |
| Not Ready                                 |
| TAVERN 1470                               |
| NO ENTRY                                  |
| CANVASS SCHOOL/SPECIAL EVENT              |
| LICENSE DAYCARE 1586                      |
| task force(1470) liquor tavern            |
| HACCP QUESTIONAIRE                        |
| LICENSE TASK FORCE / NOT -FOR-PROFIT CLU  |
| Task Force Liquor 1475                    |
| Suspected Food Poisoning                  |
| OUT OF BUSINESS                           |
| Summer Feeding                            |
:END:

#+BEGIN_SRC  sql
  select distinct results from inspections
#+END_SRC

#+RESULTS:
:RESULTS:
| results              |
|----------------------|
| Fail                 |
| Pass w/ Conditions   |
| No Entry             |
| Not Ready            |
| Out of Business      |
| Business Not Located |
| Pass                 |
:END:

Ok, disheartening. But, that is the reality of /real/ data. In the next
section we will try to clean this mess.


** Transforming the data

   For tackling a Machine Learning problem you need to identify the
   *entities* of your problem domain, and if your problem involves time,
   how those entities change over time.

   In this tutorial, we have two different goals: (1) an *EIS* and
   (2) *prioritize inspections*, the entity in which we are interested in
   both cases is the  /facility/.

   In the *EIS*, as a facility owner or manager, we want to predict if
   the facility under our control is at /risk/ of been inspected in the
   following period of time.

   In the *inspections prioritization*, we want to generate a list of
   facilities which are /likely/ to have some *critical* o *serious*
   violation /given that/ they are inspected.

   Both problems are under the umbrella of the /supervised machine
   learning/ problems. That means that we must need examples that
   specify the *outcome* in which are interested (in the ML jargon this
   is called a /label/).

   The *outcome* is what differ between those two projects. For *EIS* the
   outcome is *inspected*, for *Inspections*, the outcome is *major violation found*.

   One of the golden rules -that will make your life easier- is:

   /You can't change your original data/

   The reason for this is, if you make some mistake, or if you want to
   try a different thing you will always can go back to the beginning and
   start over.

   Let's see the data to figure out how we need to be transform it.

   Remember that the data that we have is one inspection per row.

   We will check the result of the inspections:

   #+BEGIN_SRC sql
     select
     results, count(*) as total_number
     from
     inspections
     group by
     results
     order by total_number desc;
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | results              | total_number |
   |----------------------+-------------|
   | Pass                 |       95039 |
   | Fail                 |       31366 |
   | Pass w/ Conditions   |       15363 |
   | Out of Business      |       14473 |
   | No Entry             |        4767 |
   | Not Ready            |         971 |
   | Business Not Located |          60 |
   :END:

   We will remove =Not Ready=, =No Entry=, =Out of Business= and =Business Not Located=
   from the data, and We will only keep all the other options (=Fail=, =Pass w/Condition= and
   =Pass)=.


   We still need to clean the column =type= (it contains several
   variations instead of the seven mentioned in the documentation:
   /canvass/, /complaint/, /license/, /re-inspection/, /task-force/, /consultation/
   and /suspect food poisoning/). For simplicity, we will use /regular
   expressions/ and we will ignore /re-inspection/.


   We will add the following columns in =cleaned.inspections=
   - year
   - month
   - day of week
   - is_weekend
   - week_of_year
   - quarter

   We will remove superfluous spaces and will transform the test to
   lower case, also, we will clean =risk= and we will convert =location= to a
   real =Point=.

#+begin_src sql
select state, count(*) from inspections group by state
#+end_src

#+RESULTS:
:RESULTS:
| state  |  count |
|--------+--------|
| [NULL] |     20 |
| IL     | 162019 |
:END:


   We will drop the columns =state=, =latitude=, =longitude=, since these are
   redundant.

   We will create a new =schema=

   #+BEGIN_SRC sql
     create schema if not exists cleaned
   #+END_SRC

   #+RESULTS:

   #+BEGIN_SRC sql :tangle ./src/create_cleaned_inspections_table.sql
     drop table if exists cleaned.inspections cascade;

     create table cleaned.inspections as (
     select
     inspection,
     btrim(lower(results)) as result,
     license_num,
     btrim(lower(dba_name)) as facility,
     btrim(lower(aka_name)) as facility_aka,
     btrim(lower(facility_type)) as facility_type,
     lower(substring(risk from '\((.+)\)')) as risk,
     btrim(lower(address)) as address,
     zip as zip_code,
     btrim(lower(city)) as city,
     substring(btrim(lower(type)) from 'canvass|task force|complaint|food poisoning|consultation|license') as type,
     date,
     extract(year from date) as year,
     extract(month from date) as month,
     extract(isodow from date) as day_of_week, -- Monday: 1 ... Sunday: 7
     case
     when extract(isodow from date) in (6,7) then TRUE
     else FALSE
     end as is_weekend,
     extract(week from date) as week_of_year,
     extract(quarter from date) as quarter,
     ST_SetSRID(ST_MakePoint(longitude, latitude),4326) as location
     from inspections
     where results in ('Fail', 'Pass', 'Pass w/ Conditions') and license_num is not null
     )
   #+END_SRC

   #+RESULTS:


   You could execute this code using (if you are not connected to the database):

   #+BEGIN_SRC sh :dir /docker:root@tutorial_bastion:/ :results org drawer
     psql ${FOOD_DB_URL} < /code/create_cleaned_inspections_table.sql
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   DROP TABLE
   SELECT 141754
   :END:

   Or, if you are connected to the database

   #+BEGIN_EXAMPLE sql
   \i /code/create_cleaned_inspections_table.sql
   #+END_EXAMPLE


   #+BEGIN_SRC sql :results table
     select count(inspection) from cleaned.inspections;
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   |  count |
   |--------|
   | 141754 |
   :END:


   Let's look closer the column =violations=:

   #+BEGIN_SRC sql
     select violations
     from inspections
     limit 5
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | violations                                                                                                                                                                                                                   |                                                                                                                                                                        |                                                                                                                                    |                                                                                                                                |
   |------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------|
   | [NULL]                                                                                                                                                                                                                       |                                                                                                                                                                        |                                                                                                                                    |                                                                                                                                |
   | 32. FOOD AND NON-FOOD CONTACT SURFACES PROPERLY DESIGNED, CONSTRUCTED AND MAINTAINED - Comments: Violation corrected.                                                                                                        | 34. FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED - Comments: Violation corrected.                             | 41. PREMISES MAINTAINED FREE OF LITTER, UNNECESSARY ARTICLES, CLEANING  EQUIPMENT PROPERLY STORED - Comments: Violation corrected. | 2. FACILITIES TO MAINTAIN PROPER TEMPERATURE - Comments: Violation corrected. Reach in cooler ambient air temperature @ 39.9F. |
   | 18. NO EVIDENCE OF RODENT OR INSECT OUTER OPENINGS PROTECTED/RODENT PROOFED, A WRITTEN LOG SHALL BE MAINTAINED AVAILABLE TO THE INSPECTORS - Comments: PEST CONTROL AT PREMISES 12-7-17. FOUND NO RAT DROPPINGS AT PREMISES. | 34. FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED - Comments: FOUND HOLE SEALED WITH CEMENT BY REAR EXIT DOOR. |                                                                                                                                    |                                                                                                                                |
   | [NULL]                                                                                                                                                                                                                       |                                                                                                                                                                        |                                                                                                                                    |                                                                                                                                |
   | [NULL]                                                                                                                                                                                                                       |                                                                                                                                                                        |                                                                                                                                    |                                                                                                                                |
   :END:


   Note that this column is structured in the following form:

   - If there are several violations reported, those violations will
     be separated by ='|'=
   - Every violation begins with a code and  a description
   - Every violation could have *comments*, those comments appear after
     the string =- Comments:=

   We will take that observations in account and create a new table
   called =cleaned.violations= to store

   - inspection
   - code
   - description
   - comments

   #+BEGIN_SRC sql :tangle ./src/create_violations_table.sql
   drop table if exists cleaned.violations cascade;

   create table cleaned.violations as (
   select
   inspection,
   license_num, -- This is a requirement of triage
   date,
   btrim(tuple[1]) as code,
   btrim(tuple[2]) as description,
   btrim(tuple[3]) as comment,
   (case
     when btrim(tuple[1]) = '' then NULL
     when btrim(tuple[1])::int between 1 and 14 then 'critical'
     when btrim(tuple[1])::int between 15 and 29  then 'serious'
     else 'minor'
   end
   ) as severity from
   (
   select
   inspection,
   license_num,
   date,
   regexp_split_to_array(
   regexp_split_to_table(coalesce(violations, '.- Comments:'), '\|'),   -- We don't want to loose inspections
   '\.|- Comments:') as tuple
   from inspections
   where results in ('Fail', 'Pass', 'Pass w/ Conditions') and license_num is not null
   ) as t
   )
   #+END_SRC

   #+RESULTS:


#+BEGIN_SRC sql
  select
  case when grouping(severity) = 1 then 'TOTAL' else severity end as severity,
  count(*) from cleaned.violations
  group by rollup (severity)
#+END_SRC

#+RESULTS:
:RESULTS:
| severity |  count |
|----------+--------|
| critical |  38232 |
| minor    | 479835 |
| serious  |  77400 |
| [NULL]   |  12701 |
| TOTAL    | 608168 |
:END:

   This code is in =/code/create_violations_table.sql=, you can execute
   this as before.

   As we will see through all this tutorial, /data is always messy/, to
   begin with we have several different spellings (e.g. =SUBWAY= and
   =Subway=, =MCDONALDS= and =MC DONALD'S=, =DUNKIN DONUTS/BASKIN ROBBINS= and
   =DUNKIN DONUTS / BASKIN ROBBINS=, etc)

   We could try a very simple cleaning for example, convert all the
   names to uppercase, remove the trailing spaces, remove the apostrophe
   "='"= and remove the spaces around "=/=". The problem with this approach
   is that we will be fixing the names that we just saw, but there are
   several other nuances down that list. Another approach is use [[https://www.postgresql.org/docs/current/static/fuzzystrmatch.html][soundex]],
   but that will create a lot of mismatches. The real workaround is apply
   some /machine learning/ to /deduplicate/ the entities [fn:3].  We wont
   follow that path here.


   If we go back to the columns of the table, maybe there is another way
   to solve this: we could try with the column =license_num=  (assume that one
   license represents one establishment) and the column =address= (assume that one restaurant is
   in one place).


   #+BEGIN_SRC sql
     select
     count(distinct facility) as total_facilities,
     count(distinct license_num) as total_licenses,
     count(distinct address) as total_addresses
     from cleaned.inspections
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | total_facilities | total_licenses | total_addresses |
   |-----------------+---------------+----------------|
   |           21143 |         28741 |          15945 |
   :END:

   This doesn't look promising...

   /What are the top 5 locations with more inspections?/

   #+BEGIN_SRC sql
     select
     address, count(*) as total_inspections,
     coalesce( count(*) filter (where result = 'fail'), 0)
     as total_failures
     from cleaned.inspections
     group by address
     order by total_inspections desc
     limit 5;
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | address           | total_inspections | total_failures |
   |-------------------+------------------+---------------|
   | 11601 w touhy ave |             1903 |           257 |
   | 5700 s cicero ave |              373 |            54 |
   | 500 w madison st  |              330 |            69 |
   | 324 n leavitt st  |              305 |            86 |
   | 131 n clinton st  |              276 |            34 |
   :END:

   The /location hypothesis/ also has problems, in particular could be *more*
   than one establishment per location (the first row is *O'Hare International Airport*)

   So, our last hope is the /license number/

   We could get, even more information if we check /How many of those inspections result in a 'fail'/?

   /What are the top 5 licenses with more inspections?/

   #+BEGIN_SRC sql
       select
       license_num, count(*) as total_inspections,
       coalesce(count(*) filter (where result = 'fail'), 0)
       as total_failures
       from cleaned.inspections
       group by license_num
       order by total_inspections desc
       limit 5;
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | license_num | total_inspections | total_failures |
   |------------+------------------+---------------|
   |          0 |              390 |           121 |
   |      14616 |              172 |            30 |
   |    1354323 |              130 |             1 |
   |    1574001 |               78 |             4 |
   |    1974745 |               57 |             3 |
   :END:


   Even this column has some problems, let's investigate a little about
   the =license_num= = =0=.

   #+BEGIN_SRC sql
     select
     facility_type, count(*) as total_inspections,
     coalesce(count(*) filter (where result = 'fail'), 0)
     as total_failures
     from cleaned.inspections
     where license_num=0
     group by  facility_type
     order by total_inspections desc
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | facility_type                | total_inspections | total_failures |
   |-----------------------------+------------------+---------------|
   | restaurant                  |               78 |            43 |
   | special event               |               73 |            11 |
   | church                      |               32 |             4 |
   | shelter                     |               30 |             6 |
   | navy pier kiosk             |               29 |             4 |
   | [NULL]                      |               25 |            10 |
   | grocery store               |               15 |             7 |
   | church kitchen              |               14 |             6 |
   | church/special events       |               10 |             2 |
   | private school              |               10 |             1 |
   | after school program        |                8 |             1 |
   | long term care              |                8 |             1 |
   | catering                    |                6 |             3 |
   | mobile food dispenser       |                5 |             2 |
   | school                      |                3 |             0 |
   | illegal vendor              |                3 |             3 |
   | social club                 |                3 |             3 |
   | hospital                    |                2 |             0 |
   | food pantry/church          |                2 |             0 |
   | food pantry                 |                2 |             0 |
   | non -profit                 |                2 |             0 |
   | not for profit              |                2 |             2 |
   | church/special event        |                2 |             0 |
   | soup kitchen                |                2 |             1 |
   | boys and girls club         |                2 |             0 |
   | summer feeding              |                2 |             0 |
   | summer feeding prep area    |                2 |             1 |
   | herbal life shop            |                2 |             1 |
   | daycare (2 - 6 years)       |                1 |             0 |
   | religious                   |                1 |             1 |
   | warehouse                   |                1 |             0 |
   | restaurant/grocery          |                1 |             1 |
   | retail                      |                1 |             1 |
   | after school care           |                1 |             0 |
   | incubator                   |                1 |             0 |
   | kids cafe                   |                1 |             1 |
   | chicago park district       |                1 |             0 |
   | bakery                      |                1 |             1 |
   | farmer's market             |                1 |             1 |
   | newsstand                   |                1 |             1 |
   | non-for profit basement kit |                1 |             0 |
   | wholesale                   |                1 |             1 |
   | unlicensed facility         |                1 |             1 |
   | np-kiosk                    |                1 |             0 |
   :END:

   Most of these are related to /special events/, /churchs/, /festivals/
   etc. We could research deeply the =restaurants= which have =license_num= =
   =0=, but we will skip that for the moment.


   Finally, we can conclude that, except for some details, =license_num= is
   the way to go, for the identification of the establishments.


   #+BEGIN_SRC sql
     select
     license_num, facility, address,
     count(*) as total_inspections,
     coalesce(count(*) filter (where result = 'fail'), 0)
     as total_failures
     from cleaned.inspections
     group by license_num, facility, address
     order by count(*)  desc
     limit 5;
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | license_num | facility                          | address                 | total_inspections | total_failures |
   |------------+-----------------------------------+-------------------------+------------------+---------------|
   |    1354323 | sportservice soldier field        | 1410 s museum campus dr |              119 |             1 |
   |      14616 | illinois sportservice inc         | 333 w 35th st           |               99 |            19 |
   |    1574001 | levy restaurants at wrigley field | 1060 w addison st       |               68 |             1 |
   |    1974745 | the united center                 | 1901 w madison st       |               46 |             0 |
   |    1490035 | mcdonald's                        | 6900 s lafayette ave    |               45 |             6 |
   :END:


** Exploring the data

   /Which is the spatial distribution of inspections?/


   #+BEGIN_SRC sql
   select
   zip_code,
   count(*) as total_inspections,
   coalesce(count(*) filter (where result = 'fail'), 0)
   as total_failures
   from cleaned.inspections
   group by zip_code
   order by total_inspections desc
   limit 10
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | zip_code | total_inspections | total_failures |
   |---------+------------------+---------------|
   |   60614 |             5262 |          1241 |
   |   60647 |             4835 |          1057 |
   |   60657 |             4761 |          1083 |
   |   60611 |             4709 |           788 |
   |   60622 |             4550 |          1152 |
   |   60608 |             4182 |          1022 |
   |   60618 |             4168 |           727 |
   |   60639 |             3753 |           921 |
   |   60607 |             3731 |           841 |
   |   60640 |             3671 |           983 |
   :END:

   /Which is the temporal distribution of the inspections?/

   #+BEGIN_SRC sql
   select
   year, month,
   count(*) as total_inspections,
   coalesce(count(*) filter (where result = 'fail'), 0)
   as total_failures
   from cleaned.inspections
   group by rollup(year, month)
   order by year asc, month asc
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   |   year |  month | total_inspections | total_failures |
   |--------+--------+------------------+---------------|
   |   2010 |      1 |             1279 |           330 |
   |   2010 |      2 |             1398 |           342 |
   |   2010 |      3 |             1478 |           350 |
   |   2010 |      4 |             1439 |           401 |
   |   2010 |      5 |             1541 |           389 |
   |   2010 |      6 |             1753 |           455 |
   |   2010 |      7 |             1275 |           367 |
   |   2010 |      8 |             1541 |           407 |
   |   2010 |      9 |             1640 |           427 |
   |   2010 |     10 |             1649 |           437 |
   |   2010 |     11 |             1201 |           308 |
   |   2010 |     12 |             1186 |           291 |
   |   2010 | [NULL] |            17380 |          4504 |
   |   2011 |      1 |             1259 |           287 |
   |   2011 |      2 |             1272 |           255 |
   |   2011 |      3 |             1693 |           380 |
   |   2011 |      4 |             1421 |           345 |
   |   2011 |      5 |             1645 |           362 |
   |   2011 |      6 |             1681 |           419 |
   |   2011 |      7 |             1311 |           346 |
   |   2011 |      8 |             1547 |           442 |
   |   2011 |      9 |             1481 |           417 |
   |   2011 |     10 |             1494 |           397 |
   |   2011 |     11 |             1552 |           396 |
   |   2011 |     12 |             1228 |           310 |
   |   2011 | [NULL] |            17584 |          4356 |
   |   2012 |      1 |             1290 |           302 |
   |   2012 |      2 |             1165 |           259 |
   |   2012 |      3 |             1339 |           302 |
   |   2012 |      4 |             1288 |           301 |
   |   2012 |      5 |             1682 |           382 |
   |   2012 |      6 |             1375 |           312 |
   |   2012 |      7 |             1227 |           310 |
   |   2012 |      8 |             1451 |           364 |
   |   2012 |      9 |             1406 |           324 |
   |   2012 |     10 |             1421 |           322 |
   |   2012 |     11 |             1347 |           274 |
   |   2012 |     12 |             1022 |           188 |
   |   2012 | [NULL] |            16013 |          3640 |
   |   2013 |      1 |             1426 |           261 |
   |   2013 |      2 |             1281 |           260 |
   |   2013 |      3 |             1407 |           269 |
   |   2013 |      4 |             1542 |           288 |
   |   2013 |      5 |             1692 |           331 |
   |   2013 |      6 |             1336 |           271 |
   |   2013 |      7 |             1306 |           274 |
   |   2013 |      8 |             1440 |           297 |
   |   2013 |      9 |             1628 |           375 |
   |   2013 |     10 |             1596 |           287 |
   |   2013 |     11 |             1265 |           235 |
   |   2013 |     12 |             1147 |           201 |
   |   2013 | [NULL] |            17066 |          3349 |
   |   2014 |      1 |             1228 |           231 |
   |   2014 |      2 |             1285 |           262 |
   |   2014 |      3 |             1464 |           258 |
   |   2014 |      4 |             1675 |           325 |
   |   2014 |      5 |             1706 |           336 |
   |   2014 |      6 |             1635 |           331 |
   |   2014 |      7 |             1522 |           345 |
   |   2014 |      8 |             1756 |           379 |
   |   2014 |      9 |             1761 |           380 |
   |   2014 |     10 |             1843 |           371 |
   |   2014 |     11 |             1353 |           278 |
   |   2014 |     12 |             1392 |           223 |
   |   2014 | [NULL] |            18620 |          3719 |
   |   2015 |      1 |             1429 |           301 |
   |   2015 |      2 |             1229 |           267 |
   |   2015 |      3 |             1525 |           330 |
   |   2015 |      4 |             1426 |           285 |
   |   2015 |      5 |             1455 |           292 |
   |   2015 |      6 |             1600 |           303 |
   |   2015 |      7 |             1400 |           295 |
   |   2015 |      8 |             1579 |           336 |
   |   2015 |      9 |             1676 |           322 |
   |   2015 |     10 |             1755 |           344 |
   |   2015 |     11 |             1479 |           280 |
   |   2015 |     12 |             1338 |           252 |
   |   2015 | [NULL] |            17891 |          3607 |
   |   2016 |      1 |             1411 |           298 |
   |   2016 |      2 |             1297 |           307 |
   |   2016 |      3 |             1944 |           402 |
   |   2016 |      4 |             1711 |           372 |
   |   2016 |      5 |             1780 |           379 |
   |   2016 |      6 |             1949 |           438 |
   |   2016 |      7 |             1373 |           309 |
   |   2016 |      8 |             1868 |           435 |
   |   2016 |      9 |             1914 |           420 |
   |   2016 |     10 |             1695 |           369 |
   |   2016 |     11 |             1537 |           319 |
   |   2016 |     12 |             1380 |           250 |
   |   2016 | [NULL] |            19859 |          4298 |
   |   2017 |      1 |             1560 |           325 |
   |   2017 |      2 |             1398 |           321 |
   |   2017 |      3 |             1835 |           412 |
   |   2017 |      4 |             1445 |           349 |
   |   2017 |      5 |             1816 |           392 |
   |   2017 |      6 |             1925 |           414 |
   |   2017 |      7 |             1296 |           293 |
   |   2017 |      8 |             1607 |           364 |
   |   2017 |      9 |             1547 |           361 |
   |   2017 |     10 |             1577 |           363 |
   |   2017 |     11 |             1208 |           264 |
   |   2017 |     12 |              127 |            32 |
   |   2017 | [NULL] |            17341 |          3890 |
   | [NULL] | [NULL] |           141754 |         31363 |
   :END:

   The number of inspections per month, is stable.

   #+BEGIN_SRC sql
     select
     code,
     description,
     severity,
     count(*) as total
     from cleaned.violations
     group by code, description, severity
     order by total desc
     limit 10
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | code | description                                                                                                                            | severity | total |
   |------+----------------------------------------------------------------------------------------------------------------------------------------+----------+-------|
   |   34 | FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED                                  | minor    | 78093 |
   |   35 | WALLS, CEILINGS, ATTACHED EQUIPMENT CONSTRUCTED PER CODE: GOOD REPAIR, SURFACES CLEAN AND DUST-LESS CLEANING METHODS                   | minor    | 69385 |
   |   33 | FOOD AND NON-FOOD CONTACT EQUIPMENT UTENSILS CLEAN, FREE OF ABRASIVE DETERGENTS                                                        | minor    | 68917 |
   |   38 | VENTILATION: ROOMS AND EQUIPMENT VENTED AS REQUIRED: PLUMBING: INSTALLED AND MAINTAINED                                                | minor    | 59026 |
   |   32 | FOOD AND NON-FOOD CONTACT SURFACES PROPERLY DESIGNED, CONSTRUCTED AND MAINTAINED                                                       | minor    | 58680 |
   |   41 | PREMISES MAINTAINED FREE OF LITTER, UNNECESSARY ARTICLES, CLEANING  EQUIPMENT PROPERLY STORED                                          | minor    | 37340 |
   |   18 | NO EVIDENCE OF RODENT OR INSECT OUTER OPENINGS PROTECTED/RODENT PROOFED, A WRITTEN LOG SHALL BE MAINTAINED AVAILABLE TO THE INSPECTORS | serious  | 29601 |
   |   36 | LIGHTING: REQUIRED MINIMUM FOOT-CANDLES OF LIGHT PROVIDED, FIXTURES SHIELDED                                                           | minor    | 28538 |
   |   40 | REFRIGERATION AND METAL STEM THERMOMETERS PROVIDED AND CONSPICUOUS                                                                     | minor    | 17424 |
   |   30 | FOOD IN ORIGINAL CONTAINER, PROPERLY LABELED: CUSTOMER ADVISORY POSTED AS NEEDED                                                       | minor    | 17359 |
   :END:

   This looks weird, the top most "violation" is not an actual
   violation. We will repeat the query, we will group by the =results=

   #+BEGIN_SRC sql
     with inspections_violations as (
     select
     i.inspection, i.result,
     v.code
     from cleaned.inspections as i inner join cleaned.violations as v
     using(inspection)
     )


     select code, result,
     count(code)
     from inspections_violations
     group by rollup(code, result)
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   |   code | result             |  count |
   |--------+--------------------+--------|
   |        | fail               |   2877 |
   |        | pass               |   9705 |
   |        | pass w/ conditions |    119 |
   |        | [NULL]             |  12701 |
   |      1 | fail               |    347 |
   |      1 | pass               |     62 |
   |      1 | pass w/ conditions |    287 |
   |      1 | [NULL]             |    696 |
   |     10 | fail               |    740 |
   |     10 | pass               |    367 |
   |     10 | pass w/ conditions |    162 |
   |     10 | [NULL]             |   1269 |
   |     11 | fail               |   2757 |
   |     11 | pass               |   1650 |
   |     11 | pass w/ conditions |    701 |
   |     11 | [NULL]             |   5108 |
   |     12 | fail               |   1848 |
   |     12 | pass               |    625 |
   |     12 | pass w/ conditions |   1018 |
   |     12 | [NULL]             |   3491 |
   |     13 | fail               |    568 |
   |     13 | pass               |    274 |
   |     13 | pass w/ conditions |     33 |
   |     13 | [NULL]             |    875 |
   |     14 | fail               |    801 |
   |     14 | pass               |    570 |
   |     14 | pass w/ conditions |    684 |
   |     14 | [NULL]             |   2055 |
   |     15 | pass               |      3 |
   |     15 | pass w/ conditions |      1 |
   |     15 | [NULL]             |      4 |
   |     16 | fail               |   3456 |
   |     16 | pass               |   2334 |
   |     16 | pass w/ conditions |   1451 |
   |     16 | [NULL]             |   7241 |
   |     17 | fail               |     55 |
   |     17 | pass               |      5 |
   |     17 | pass w/ conditions |     61 |
   |     17 | [NULL]             |    121 |
   |     18 | fail               |  16051 |
   |     18 | pass               |  12569 |
   |     18 | pass w/ conditions |    981 |
   |     18 | [NULL]             |  29601 |
   |     19 | fail               |   3806 |
   |     19 | pass               |   2826 |
   |     19 | pass w/ conditions |    502 |
   |     19 | [NULL]             |   7134 |
   |      2 | fail               |   3536 |
   |      2 | pass               |   1831 |
   |      2 | pass w/ conditions |   2603 |
   |      2 | [NULL]             |   7970 |
   |     20 | fail               |    110 |
   |     20 | pass               |     68 |
   |     20 | pass w/ conditions |     11 |
   |     20 | [NULL]             |    189 |
   |     21 | fail               |   3970 |
   |     21 | pass               |   2184 |
   |     21 | pass w/ conditions |   5012 |
   |     21 | [NULL]             |  11166 |
   |     22 | fail               |    914 |
   |     22 | pass               |    693 |
   |     22 | pass w/ conditions |    130 |
   |     22 | [NULL]             |   1737 |
   |     23 | fail               |      3 |
   |     23 | pass               |      2 |
   |     23 | [NULL]             |      5 |
   |     24 | fail               |   2949 |
   |     24 | pass               |   2180 |
   |     24 | pass w/ conditions |    285 |
   |     24 | [NULL]             |   5414 |
   |     25 | fail               |    122 |
   |     25 | pass               |     62 |
   |     25 | pass w/ conditions |     59 |
   |     25 | [NULL]             |    243 |
   |     26 | fail               |   1315 |
   |     26 | pass               |    947 |
   |     26 | pass w/ conditions |    149 |
   |     26 | [NULL]             |   2411 |
   |     27 | fail               |    281 |
   |     27 | pass               |    190 |
   |     27 | pass w/ conditions |    107 |
   |     27 | [NULL]             |    578 |
   |     28 | fail               |    587 |
   |     28 | pass               |    117 |
   |     28 | pass w/ conditions |    749 |
   |     28 | [NULL]             |   1453 |
   |     29 | fail               |   5282 |
   |     29 | pass               |   4108 |
   |     29 | pass w/ conditions |    713 |
   |     29 | [NULL]             |  10103 |
   |      3 | fail               |   3404 |
   |      3 | pass               |    238 |
   |      3 | pass w/ conditions |   4961 |
   |      3 | [NULL]             |   8603 |
   |     30 | fail               |   3980 |
   |     30 | pass               |  10844 |
   |     30 | pass w/ conditions |   2535 |
   |     30 | [NULL]             |  17359 |
   |     31 | fail               |   2623 |
   |     31 | pass               |   6795 |
   |     31 | pass w/ conditions |   1635 |
   |     31 | [NULL]             |  11053 |
   |     32 | fail               |  14550 |
   |     32 | pass               |  37011 |
   |     32 | pass w/ conditions |   7119 |
   |     32 | [NULL]             |  58680 |
   |     33 | fail               |  15895 |
   |     33 | pass               |  44766 |
   |     33 | pass w/ conditions |   8256 |
   |     33 | [NULL]             |  68917 |
   |     34 | fail               |  18686 |
   |     34 | pass               |  50629 |
   |     34 | pass w/ conditions |   8778 |
   |     34 | [NULL]             |  78093 |
   |     35 | fail               |  17506 |
   |     35 | pass               |  44343 |
   |     35 | pass w/ conditions |   7536 |
   |     35 | [NULL]             |  69385 |
   |     36 | fail               |   7578 |
   |     36 | pass               |  17893 |
   |     36 | pass w/ conditions |   3067 |
   |     36 | [NULL]             |  28538 |
   |     37 | fail               |   2635 |
   |     37 | pass               |   4914 |
   |     37 | pass w/ conditions |    774 |
   |     37 | [NULL]             |   8323 |
   |     38 | fail               |  15078 |
   |     38 | pass               |  37515 |
   |     38 | pass w/ conditions |   6433 |
   |     38 | [NULL]             |  59026 |
   |     39 | fail               |    225 |
   |     39 | pass               |    450 |
   |     39 | pass w/ conditions |     82 |
   |     39 | [NULL]             |    757 |
   |      4 | fail               |    245 |
   |      4 | pass               |     97 |
   |      4 | pass w/ conditions |    270 |
   |      4 | [NULL]             |    612 |
   |     40 | fail               |   4615 |
   |     40 | pass               |  10501 |
   |     40 | pass w/ conditions |   2308 |
   |     40 | [NULL]             |  17424 |
   |     41 | fail               |  10368 |
   |     41 | pass               |  22917 |
   |     41 | pass w/ conditions |   4055 |
   |     41 | [NULL]             |  37340 |
   |     42 | fail               |   1635 |
   |     42 | pass               |   4220 |
   |     42 | pass w/ conditions |   1378 |
   |     42 | [NULL]             |   7233 |
   |     43 | fail               |   2148 |
   |     43 | pass               |   5404 |
   |     43 | pass w/ conditions |   1537 |
   |     43 | [NULL]             |   9089 |
   |     44 | fail               |    131 |
   |     44 | pass               |    258 |
   |     44 | pass w/ conditions |     67 |
   |     44 | [NULL]             |    456 |
   |     45 | fail               |   1776 |
   |     45 | pass               |   4369 |
   |     45 | pass w/ conditions |   1217 |
   |     45 | [NULL]             |   7362 |
   |      5 | fail               |     10 |
   |      5 | pass w/ conditions |      6 |
   |      5 | [NULL]             |     16 |
   |      6 | fail               |    748 |
   |      6 | pass               |     51 |
   |      6 | pass w/ conditions |    919 |
   |      6 | [NULL]             |   1718 |
   |      7 | fail               |     85 |
   |      7 | pass               |     35 |
   |      7 | pass w/ conditions |     57 |
   |      7 | [NULL]             |    177 |
   |     70 | fail               |    421 |
   |     70 | pass               |    196 |
   |     70 | pass w/ conditions |    183 |
   |     70 | [NULL]             |    800 |
   |      8 | fail               |   1289 |
   |      8 | pass               |    599 |
   |      8 | pass w/ conditions |   1218 |
   |      8 | [NULL]             |   3106 |
   |      9 | fail               |   1401 |
   |      9 | pass               |    837 |
   |      9 | pass w/ conditions |    298 |
   |      9 | [NULL]             |   2536 |
   | [NULL] | [NULL]             | 608168 |
   :END:


   *NOTE*: You could also split between, /major violation found/ and /minor violation found/,
   but we will keep this simple for the moment.


   /How often change the risk in a facility?/

   #+BEGIN_SRC sql
     select
     license_num, risk || '->' || previous_risk, count(*)
     from
     (
     select date, license_num,risk, lag(risk) over w as previous_risk
     from cleaned.inspections
     window w as (partition by license_num order by date asc)
     ) as t
     where (risk <>  previous_risk) and license_num != '0'
     group by license_num, risk || '->' || previous_risk
     order by  count(*) desc, license_num
     limit 10
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   | license_num | ?column?     | count |
   |------------+--------------+-------|
   |      20481 | medium->high |    10 |
   |      20481 | high->medium |    10 |
   |      14616 | low->medium  |     8 |
   |      14616 | medium->low  |     8 |
   |    1574001 | high->medium |     8 |
   |    1574001 | medium->high |     8 |
   |      23081 | high->medium |     7 |
   |      23081 | medium->high |     7 |
   |      51011 | medium->high |     7 |
   |      51011 | high->medium |     7 |
   :END:


*** Events table

We are ready for creating our events table

   #+BEGIN_SRC sql
     create schema if not exists semantic
   #+END_SRC

   #+RESULTS:



#+begin_src sql :tangle ./src/create_events_table.sql


drop table if exists semantic.events cascade;

create table semantic.events as (

select i.inspection, type, i.license_num, facility_type, zip_code, city,
       i.date, risk, result,
jsonb_agg(
    jsonb_build_object(
        'code', v.code,
        'severity', v.severity,
	'description', v.description,
	'comment', v.comment
	)
order  by code
) as violations
from cleaned.inspections as i
inner join
cleaned.violations as v
on i.inspection = v.inspection
group by i.inspection, type, i.license_num, facility_type, zip_code, city, i.date, risk, result
)
#+end_src

#+RESULTS:


#+begin_src sql
select * from semantic.events limit 1
#+end_src





#+RESULTS:
:RESULTS:
| inspection | type    | license_num | facility_type | zip_code | city    |       date | risk   | result | violations|
||
|     100209 | canvass |    1226806 | liquor       |   60622 | chicago | 2010-01-20 | medium | fail   | [{"code" : "13", "severity" : "critical", "description" : "NO EVIDENCE OF RODENT OR INSECT INFESTATION, NO BIRDS, TURTLES OR OTHER ANIMALS", "comment" : "All necessary control measures shall be used to effectively minimize or eliminate the presence of rodents, roaches, and other vermin/insect infestations"}, {"code" : "32", "severity" : "minor", "description" : "FOOD AND NON-FOOD CONTACT SURFACES PROPERLY DESIGNED, CONSTRUCTED AND MAINTAINED", "comment" : "All food and non-food contact equipment and utensils shall be smooth, easily cleanable, and durable, and shall be in good repair"}, {"code" : "33", "severity" : "minor", "description" : "FOOD AND NON-FOOD CONTACT EQUIPMENT UTENSILS CLEAN, FREE OF ABRASIVE DETERGENTS", "comment" : "All food and non-food contact surfaces of equipment and all food storage utensils shall be thoroughly cleaned and sanitized daily"}, {"code" : "34", "severity" : "minor", "description" : "FLOORS: CONSTRUCTED PER CODE, CLEANED, GOOD REPAIR, COVING INSTALLED, DUST-LESS CLEANING METHODS USED", "comment" : "The floors shall be constructed per code, be smooth and easily cleaned, and be kept clean and in good repair"}, {"code" : "38", "severity" : "minor", "description" : "VENTILATION: ROOMS AND EQUIPMENT VENTED AS REQUIRED: PLUMBING: INSTALLED AND MAINTAINED", "comment" : "Ventilation: All plumbing fixtures, such as toilets, sinks, washbasins, etc"}, {"code" : "41", "severity" : "minor", "description" : "PREMISES MAINTAINED FREE OF LITTER, UNNECESSARY ARTICLES, CLEANING  EQUIPMENT PROPERLY STORED", "comment" : "All parts of the food establishment and all parts of the property used in connection with the operation of the establishment shall be kept neat and clean and should not produce any offensive odors"}, {"code" : "42", "severity" : "minor", "description" : "APPROPRIATE METHOD OF HANDLING OF FOOD (ICE) HAIR RESTRAINTS AND CLEAN APPAREL WORN", "comment" : "All employees shall be required to use effective hair restraints to confine hair"}] |
:END:

* â–¶ TODO Add number of violations by type

* â–¶ TODO Add number of facilities in 1km, 2km, 5km
