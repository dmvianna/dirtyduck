#+TITLE: Dirty duck: A triage's guided tour
#+AUTHOR: Center of Data Science for Public Policy
#+EMAIL: adolfo@uchicago.edu
#+STARTUP: showeverything
#+STARTUP: nohideblocks
#+STARTUP: indent
#+PROPERTY: header-args:sql :engine postgresql
#+PROPERTY: header-args:sql+ :dbhost 0.0.0.0
#+PROPERTY: header-args:sql+ :dbport 5434
#+PROPERTY: header-args:sql+ :dbuser food_user
#+PROPERTY: header-args:sql+ :dbpassword some_password
#+PROPERTY: header-args:sql+ :database food
#+PROPERTY: header-args:sql+ :results table drawer
#+PROPERTY: header-args:shell     :results drawer
#+PROPERTY: header-args:ipython   :session food_inspections


* Description of the problem to solve

The [[https://data.cityofchicago.org/Health-Human-Services/Food-Inspections/4ijn-s7e5][Chicago's Food Inspections data set]] is well know, and it has been
used in several examples around the web (e.g. [[https://chicago.github.io/food-inspections-evaluation/][here]],  [[https://youtu.be/lyDLAutA88s][here]] or [[https://youtu.be/1dKonIT-Yak][here]])

   In this tutorial, we have two different goals: (1) an *EIS* and
   (2) *prioritize inspections*, the entity in which we are interested in
   both cases is the  /facility/.

   In the *EIS*, as a facility owner or manager, we want to predict if
   the facility under our control is at /risk/ of been inspected in the
   following period of time.

   In the *inspections prioritization*, we want to generate a list of
   facilities which are /likely/ to have some *critical* o *serious*
   violation /given that/ they are inspected.

   Both problems are under the umbrella of the /supervised machine
   learning/ problems. That means that we must need examples that
   specify the *outcome* in which are interested (in the ML jargon this
   is called a /label/).

   The *outcome* is what differ between those two projects. For *EIS* the
   outcome is *inspected*, for *Inspections*, the outcome is *major violation found*.


  Actually, We want to solve two problems: an /Early intervention system/ (*EIS*)
  and a /Inspection prioritization/.


  The first scenario, is the following:  you work for the Chicago's
  government, and you try
  to prioritize your resources (i.e. your inspection workforce), since
  they are limited. So, you will use the data (the same data set,
  remember) for answering the next
  question:

#+begin_quote
  Which X facilities are likely to violate some rule in the
  following Y period of time?
#+end_quote

  In this case maybe you are interested not
  in all the violations but in the more grave.



  We will use the /same/ data set, second, we will be the restaurant's
  owner, and we want to know:

#+begin_quote
Will my restaurant be inspected in the
/next X period of time?/
#+end_quote

Where $X$ could be 1 month, 1 week, 1 year,
etc.

  Knowing the answer to this question, allows you (as the restaurant's
  owner) to be prepared and take the pertinent actions.

* Content

  This tutorial is divided in the following sections

- [[file:infrastructure.org][Infrastructure]]
- [[file:data_preparation.org][Preparing your data]]
- [[file:data_exploration.org][Knowing your data]]
- [[file:triage_intro.org][Introduction to triage]]
- [[file:inspections.org][Modeling: Inspections prioritization]]
- [[file:eis.org][Modeling: Early Warning System]]



[fn:3]
[fn:1]

[fn:2]
